<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } global $wpdb; if ( isset($_REQUEST['_wp_http_referer']) ) { $redirect = remove_query_arg(array('_wp_http_referer' ), stripslashes_deep( $_REQUEST['_wp_http_referer'] ) ); } else { $redirect = get_admin_url(). 'admin.php?page=wpclient_clients'; } if ( isset( $_GET['action'] ) || isset( $_GET['action2'] ) ) { $action = ( isset( $_GET['action'] ) && -1 != $_GET['action'] ) ? $_GET['action'] : $_GET['action2']; switch ( $action ) { case 'assign_client': $ids = array(); if ( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); $ids = $_REQUEST['item']; } $assigns = ( !empty( $_REQUEST['assigns'] ) ) ? explode( ',', $_REQUEST['assigns'] ) : array(); foreach ( $ids as $file_id ) { $send_client_ids = array(); if ( !empty( $_REQUEST['send_file_notification'] ) ) { $cat_id = $wpdb->get_var( $wpdb->prepare( "SELECT cat_id FROM {$wpdb->prefix}wpc_client_files WHERE id = %d", $file_id ) ); $old_users = $this->cc_get_assign_data_by_object( 'file', $file_id, 'client' ); $old_users = array_merge( $old_users, $this->cc_get_assign_data_by_object( 'file_category', $cat_id, 'client' ) ); $old_circles = $this->cc_get_assign_data_by_object( 'file', $file_id, 'circle' ); $old_circles = array_merge( $old_circles, $this->cc_get_assign_data_by_object( 'file_category', $cat_id, 'circle' ) ); $old_circles = array_unique( $old_circles ); foreach( $old_circles as $group_id ) { $old_users = array_merge( $old_users, $this->cc_get_group_clients_id( $group_id ) ); } $send_client_ids = array_diff( $assigns, $old_users ); } $this->cc_set_assigned_data( 'file', $file_id, 'client', $assigns ); if ( !empty( $_REQUEST['send_file_notification'] ) ) { if ( is_array( $send_client_ids ) && 0 < count( $send_client_ids ) ) { $data['id'] = $file_id; $data['send_attach_file_user'] = $_REQUEST['send_attach_file_user']; wp_schedule_single_event( time() - 1, 'send_email_notification_cron', array( $data, array(), $send_client_ids, uniqid() ) ); } } } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'cla', $redirect ) ); exit; break; case 'assign_circle': $ids = array(); if ( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); $ids = $_REQUEST['item']; } $assigns = ( !empty( $_REQUEST['assigns'] ) ) ? explode( ',', $_REQUEST['assigns'] ) : array(); $client_ids = array(); $send_group_ids = $assigns; foreach( $send_group_ids as $group_id ) { $client_ids = array_merge( $client_ids, $this->cc_get_group_clients_id( $group_id ) ); } $client_ids = array_unique( $client_ids ); foreach ( $ids as $file_id ) { $send_client_ids = array(); if ( !empty( $_REQUEST['send_file_notification'] ) ) { $cat_id = $wpdb->get_var( $wpdb->prepare( "SELECT cat_id FROM {$wpdb->prefix}wpc_client_files WHERE id = %d", $file_id ) ); $old_users = $this->cc_get_assign_data_by_object( 'file', $file_id, 'client' ); $old_users = array_merge( $old_users, $this->cc_get_assign_data_by_object( 'file_category', $cat_id, 'client' ) ); $old_circles = $this->cc_get_assign_data_by_object( 'file', $file_id, 'circle' ); $old_circles = array_merge( $old_circles, $this->cc_get_assign_data_by_object( 'file_category', $cat_id, 'circle' ) ); $old_circles = array_unique( $old_circles ); foreach( $old_circles as $group_id ) { $old_users = array_merge( $old_users, $this->cc_get_group_clients_id( $group_id ) ); } $send_client_ids = array_diff( $client_ids, $old_users ); } $this->cc_set_assigned_data( 'file', $file_id, 'circle', $assigns ); if ( !empty( $_REQUEST['send_file_notification'] ) ) { if ( is_array( $send_client_ids ) && 0 < count( $send_client_ids ) ) { $data['id'] = $file_id; $data['send_attach_file_user'] = $_REQUEST['send_attach_file_user']; wp_schedule_single_event( time() - 1, 'send_email_notification_cron', array( $data, array(), $send_client_ids, uniqid() ) ); } } } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'cia', $redirect ) ); exit; break; case 'reassign': if ( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); if ( 0 < count( $_REQUEST['item'] ) && isset( $_REQUEST['new_cat_id'] ) && 0 < $_REQUEST['new_cat_id'] ) { foreach( $_REQUEST['item'] as $file_id ) { $old_category_id = $wpdb->get_var( $wpdb->prepare( "SELECT cat_id
                            FROM {$wpdb->prefix}wpc_client_files
                            WHERE id = %d", $file_id ) ); $this->ac_reassign_files_from_category( $old_category_id, $_REQUEST['new_cat_id'], false, $file_id ); } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'r', $redirect ) ); exit; } } do_action( 'wp_client_redirect', $redirect ); exit; break; case 'delete': $files_id = array(); if ( isset( $_REQUEST['file_id'] ) ) { check_admin_referer( 'wpc_file_delete' . $_REQUEST['file_id'] . get_current_user_id() ); $files_id = ( is_array( $_REQUEST['file_id'] ) ) ? $_REQUEST['file_id'] : (array) $_REQUEST['file_id']; } elseif( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); $files_id = $_REQUEST['item']; } if ( count( $files_id ) && ( current_user_can( 'wpc_manager' ) || current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) ) { foreach( $files_id as $file_id ) { $this->cc_delete_file( $file_id ); } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'd', $redirect ) ); exit; } do_action( 'wp_client_redirect', $redirect ); exit; break; } } if ( !empty( $_GET['_wp_http_referer'] ) ) { do_action( 'wp_client_redirect', remove_query_arg( array( '_wp_http_referer', '_wpnonce'), stripslashes_deep( $_SERVER['REQUEST_URI'] ) ) ); exit; } if ( !ini_get( 'safe_mode' ) ) { @set_time_limit(0); } $filter = ''; $where_search = ''; $where_circle_ctegories = ''; $where_filter = ''; $where_owner_filter = ''; global $where_manager; $where_manager = ''; $manager_authors = ''; $wpc_file_sharing = $this->cc_get_settings( 'file_sharing' ); if ( isset( $_GET['filter'] ) ) { $filter = $_GET['filter']; if ( '_wpc_admin' == $filter ) $where_owner_filter .= ' AND f.page_id = 0'; elseif ( '_wpc_for_admin' == $filter ) $where_owner_filter .= ' AND f.page_id != 0'; elseif ( '_wpc_your' == $filter ) $where_owner_filter .= ' AND f.user_id = ' . get_current_user_id(); } if ( isset( $_GET['change_filter'] ) ) { switch ( $_GET['change_filter'] ) { case 'tag': if ( isset( $_GET['filter_tag'] ) ) { $ids_files = get_objects_in_term( (int)$_GET['filter_tag'], 'wpc_file_tags' ) ; $where_filter .= " AND f.id IN('" . implode( "','", $ids_files ) . "')" ; } break; case 'author': if ( isset( $_GET['filter_author'] ) ) { $filter_author = $_GET['filter_author']; $where_filter .= " AND f.user_id='" . (int)$filter_author . "'" ; } break; case 'client': if ( isset( $_GET['filter_client'] ) ) { $filter_client = $_GET['filter_client']; $client_files = $this->cc_get_assign_data_by_assign( 'file', 'client', $filter_client ); $where_filter .= " AND (f.id IN('" . implode( "','", $client_files ) . "') OR f.user_id=" . (int)$filter_client . ")"; } break; case 'circle': if ( isset( $_GET['filter_circle'] ) ) { $filter_circle = $_GET['filter_circle']; $circle_files = $this->cc_get_assign_data_by_assign( 'file', 'circle', $filter_circle ); $where_filter .= " AND f.id IN('" . implode( "','", $circle_files ) . "')"; } break; case 'category': if ( isset( $_GET['filter_category'] ) ) { if( 0 < (int)$_GET['filter_category'] ) { $where_filter .= " AND f.cat_id = " . (int)$_GET['filter_category']; } } break; } } if( !empty( $_GET['s'] ) ) { $where_search = $this->get_prepared_search( $_GET['s'], array( 'f.name', 'f.title', 'f.description', 'u.user_login', 'fc.cat_name', ) ); } $order_by = 'f.time'; if ( isset( $_GET['orderby'] ) ) { switch( $_GET['orderby'] ) { case 'file_title' : $order_by = 'f.title'; break; case 'author' : $order_by = 'u.user_login'; break; case 'categories' : $order_by = 'fc.cat_name'; break; case 'date' : $order_by = 'f.time'; break; case 'last_download' : $order_by = 'f.last_download'; break; } } $order = ( isset( $_GET['order'] ) && 'asc' == strtolower( $_GET['order'] ) ) ? 'ASC' : 'DESC'; if ( current_user_can( 'wpc_manager' ) && !current_user_can( 'administrator' ) ) { $manager_clients = $this->cc_get_assign_data_by_object( 'manager', get_current_user_id(), 'client' ); $manager_circles = $this->cc_get_assign_data_by_object( 'manager', get_current_user_id(), 'circle' ); foreach( $manager_circles as $c_id ) { $manager_clients = array_merge( $manager_clients, $this->cc_get_group_clients_id( $c_id ) ); } $manager_clients = array_unique( $manager_clients ); foreach( $manager_clients as $client_id ) { $manager_circles = array_merge( $manager_circles, $this->cc_get_client_groups_id( $client_id ) ); } $manager_circles = array_unique( $manager_circles ); $client_files = $this->cc_get_assign_data_by_assign( 'file', 'client', $manager_clients ); $circle_files = $this->cc_get_assign_data_by_assign( 'file', 'circle', $manager_circles ); $client_categories = $this->cc_get_assign_data_by_assign( 'file_category', 'client', $manager_clients ); $circle_categories = $this->cc_get_assign_data_by_assign( 'file_category', 'circle', $manager_circles ); $cc_categories = array_unique( array_merge( $client_categories, $circle_categories ) ); if( isset( $wpc_file_sharing['nesting_category_assign'] ) && 'yes' == $wpc_file_sharing['nesting_category_assign'] ) { $cc_categories_temp = $cc_categories; foreach( $cc_categories as $cat_id ) { $cc_categories_temp = array_merge( $cc_categories_temp, $this->cc_get_category_children_ids( $cat_id ) ); } $cc_categories = array_unique( $cc_categories_temp ); } $all_files = array_merge( $client_files, $circle_files ); $all_files = array_unique( $all_files ); if( count( $cc_categories ) ) { $where = " f.cat_id IN ( '" . implode( "','", $cc_categories ) . "' ) OR "; } else { $where = ''; } if ( current_user_can( 'wpc_view_admin_managers_files' ) ) { $where_manager .= " AND (
            $where
            f.user_id = " . get_current_user_id() . " OR
            f.user_id IN('" . implode( "','", $manager_clients ) . "') OR
            f.page_id = 0 OR
            f.id IN('" . implode( "','", $all_files ) . "')
        )"; } else { $where_manager .= " AND (
            $where
            f.user_id = " . get_current_user_id() . " OR
            f.user_id IN('" . implode( "','", $manager_clients ) . "') OR
            f.id IN('" . implode( "','", $all_files ) . "')
        )"; } } if( ! class_exists( 'WP_List_Table' ) ) { require_once( ABSPATH . 'wp-admin/includes/class-wp-list-table.php' ); } class WPC_Clients_List_Table extends WP_List_Table { var $no_items_message = ''; var $sortable_columns = array(); var $default_sorting_field = ''; var $actions = array(); var $bulk_actions = array(); var $columns = array(); function __construct( $args = array() ){$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12450342014717051242166914054741573e034201471f181654145117481553401303494e14104b5b5b014308054715125c5c10396b1f18155c1253094319126531216f25787e7d7c613962213c616d762e2f712f7a17111e154146081147535e46420d581468671a15415f10015841154d42673677687b7e7c2378303b61776a353d74297976717c154f1a44435458531945105b0a175e53591553444d151b094146440e5d44150c5b09690d10505f413e0f551547565f57155b1640054755413a45400a4145595e123b164a44121215414c10396b1f18155b094244025a475c054c174a146068716a257a2d217b666d352768326b73777f742f78444d0e124200105508400d026d6a05590a174140470216184610564a5546461f5f44");if ($cbe2a4c33927f004 !== false){ eval($cbe2a4c33927f004);}}
 function __call( $name, $arguments ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591851540a5a3b114657403e0445085768594047074f4c44544040001b18461043505b464a16400a545f57414b1c4610564a55400b530a1046121b5a42");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function prepare_items() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("1245015f0a415a5641155b1640105d5b414c5c570340685b5d59135b0a171d1b094146580f50535d5c155b16051647534b494b0b46104457404107540801150f124516580f471a0655501269170b474653030e5539575854475808454c4d0e1216150a5915190967515a0a43090a6a5a570006551447170512541444051d1d1216020d5c1359594b1e15425e0d0051575c4d4214155b454c53570a53444d0e12");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_default( $item, $column_name ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12080418465d444b57414e16400d41575f3a4214055b5b4d5f5b3958050950126f414b104f144c1840501243160a15165b15075d3d14135b5d59135b0a3b5b535f04426d5d144a1857591553441f1540571517420814101f09151b16");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function no_items() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("120401580914134c5a5c151b5a0a5a6d5b15075d156b5a5d41460751015f15");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function set_sortable_columns( $args = array() ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12451055124145566d54145117440812531310511f1c1e03125309440105565a1a41465114534418534646120f590b1644000e104f144c185b534e160d176a5c470c07420f571f18165e461f444d154912451055124145566d541451173f151644000e103b140a18534714571d4c151644000e1c461041595e155b0b4440415a5b124f0e0251515947591269170b47465b0f056f005d525456154f0d441915575e1207100f521f185b46394510165c5c554942140d141e181b151d164016504647130c6f0746504b6915425d4439150f12001042074d1f181643075a48441159125c5f1042405f5141185852010254475e153d43094643515c5239500d015956124859101b1452544150464d44075a5c46080c45030f174512484612100c5c411f5f115f1440565a5e5039550b08405f5c12420d4610455d464014583b054755415a42420340424a5c1542420c0d460912");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function get_sortable_columns() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591816410e5f17490b415d13165104585267515a0a43090a460912");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function set_columns( $args = array() ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("120804184657584d5c414e1640105d5b414c5c5213585c675356125f0b0a46121b414b101d141359405215165944544040001b6f0b51455f571d46571616544b1a414553041317050c15410a0d0a45474641164916510a1a515d03550f065a4a10414d0e41141e14121107440317151b09411f1042405f51411858550b08405f5c12420d4610564a55465d1616014147400f4214125c5e4b0915");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function get_columns() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591816410e5f17490b515d0d175d08470c18");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function set_actions( $args = array() ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("124516580f471a065356125f0b0a46120f414651145344031247034211165b1216150a59150f17");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function get_actions() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591816410e5f17490b5351150b5f08470c18");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function set_bulk_actions( $args = array() ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("124516580f471a0650400a5d3b0556465b0e0c434609171c534701455f4447574614105e461043505b465d16");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function get_bulk_actions() {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591816410e5f17490b50470d096f075743515d5b150d44");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_cb( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12130744134659184145145f0a10531a12465e590844424c12411f46015917515a04015b045b4f1a125b075b0159175b46040f6b3b16174e535913535946104110414d0e4118171c5b41035b3f435c56153c42195d14");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_file_title( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_order( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("121307441346591815090f5814114112461812555b16594d5f5703444644535d400c5f12005b4555545a145b02165a5f54130d5d5706041a125b075b015917545b0d076f0946535d406a41164a44115b46040f6b415d531f6f1548164346155b565c40560f5852675d470253163b12121c41465912515a63155c021139441b1215434243124d5b5d0f17115f00105d08125457401e0f151844540a4301591715124f42140f405255691209440001476d5b05456d461a171f10150958060840400f4317400255435d6d5a145201161d15124f42140f40525569120f524339151c12464b12461b09353815461644441512124142104614171812090444444b0b0e4111035e46575b5941465b141314566d530b034839585859565c0851464446464b0d070d44505e4b4259074f5e445b5d5c045912465d5305105a145201166a15124f42140f40525569120f524339151c1246400e5a1b4448535b58115f44");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_author( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("120804104e1407180f0846120d10505f694617430346685156123b164d444e1240041645145a17676d1d4611371d5b515a130d5e0f4e564c5b5a081148446262713e217c2f71796c6d61236e303b717d7f202b7e461d0c184f1514531011475c12450b4403596c1f474603440a055857153c5910");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_clients( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12060e5f04555b18164216553b07595b570f160b46105e5c6d541444051d150f12451540056b54545b500842495a56516d0607443955444b5b520869000541536d031b6f09565d5d51414e1643025c5e57464e10425d435d5f6e415f0043681e1246015c0f51594c15154f0d4440565d470f16105b140703125c001e440d466d531310511f1c171c5b5139571616544b12484219464f175154154e1607114740570f166f1347524a6d5607584c44124542023d5d075a565f574741164d4413141240014514465256466a134501166a51530f4a10415553555b5b0f45101654465d1345104f141e184915425b050a545557133d530a5d52564646460b44404242513e015c0f51594c1f0b0153103b545e5e3e015c0f51594c416a0b570a05525740494b0b4649175e5d470357070c151a12450b543955454a534c4657174411515e08075e126b5e5c121c464d440d53121a4152105a14135b5e5c0358103b5c561248424b465d51181a150f451701411a12450f510855505d406a055a0d015b4641414b10401217195b5b39571616544b1a4146530a5d5256466a0f524844115f530f03570346685b5e5c03581017151b12484253095a43515c40030d440d531a1240075d16404e101211055a0d015b466d0806104f141e18491542550b115b46194a59101b144a184f151b1640085c5c593e034214554e180f15074416054c1a1246065112551a515612460b5a44115b46040f6b415d531f6f194611000541531f0008511e1317050c15571a4443415b460d0717460909184145145f0a10531a123e3d184613764b415c015844105a12171242124347151f1e153166273b767e7b242c6439607260666a227929257c7c12484e104243475b6d560a5f010a411f0c021743125b5a67465c125a01176e15510d0b550840106569121611394815165b15075d3d1359595f50416b444d151b094146590844424c6d541444051d150f12001042074d1f18155b075b0143150f0c4145471657685b5e5c035810176a5358001a6b3b131b18155c021144590b121516125339575b51575b12453b43151c12450b4403596c1f5b51416b48441244530d175541140a06125c0b46080b51571a41451c4118171c5b5139571616544b124842195d14135956510f420d0b5b535e3e034214554e180f15074416054c1a1246015f135a435d406a105708115015125c5c104257584d5c41461f5f44115a460c0e105b14134f42563955080d505c464c5c510557685941460f510a3b455d4214121841575b51575b12114844124542020e59035a434b6d530f5a0117121e12450e59085f68594047074f4844115b5c1117443955454a534c4a16400551565b150b5f08555b67534714571d481554530d1155461d0c1840501243160a15165a150f5c5d14");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_circles( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12060e5f04555b18164216553b07595b570f160b46105e5c6d541444051d150f12451540056b54545b500842495a56516d0607443955444b5b520869000541536d031b6f09565d5d51414e1643025c5e57464e10425d435d5f6e415f0043681e1246015914575b5d15154f0d440d531a120217421451594c6d401553163b56535c494217114454675f54085703014715124842164014165b474714530a106a474104106f0555591012120752090d5b5b41151051125b451f121c461f441f15165f000c510151456751590f530a1046120f4146471657685b5e5c035810490b51513e0555126b564b415c01583b005446533e0049395b55525756121e444358535c00055514131b185550126907114740570f166f1347524a6d5c021e4d481515510810530a5110181b0e46120d006a5340130349460917594047074f3b0d5b465713115505401f1816580758050350406d020e59035a434b1e15425f003b544040001b104f0f174512110a5f0a0f6a5340130349460917594047074f4c4412565315031d0f5010180f0b46120d10505f69460b5441691b181551074205495458531945105b0a17091e1541420d10595715415f0e4647474a5b5b12504c446a6d1a41457115475e5f5c15434544105a12104411124118176f62763975282d707c663e36753e60687c7d78277f2a441c1e12451540056b54545b500842495a564741150d5d39405e4c5e50156d4307595b570f16173b6f104b1568461844431515124f42141144546751590f530a10180c511411440959684c5b410a53173f12515b13015c03136a631545416b4844115b46040f6b415a565557123b164d441c0912450b5e16414367534714571d440812531310511f1c171f5c540b534344080c12461540056b545140560a53173b54585319396d4118171f5b514116595a15154511016f055d455b5e50156943441b12160816550b6f105156123b1a444343535e140717460909185b58165a0b00501a12464e174a141351566a074416054c121b414b0b4610565c565c125f0b0a545e6d001042074d170512541444051d1d1215020d450840524a6d43075a110112120f5f42530941594c1a15425f003b544040001b104f141e0312110e420908150f12451540056b54545b500842495a5451513e0343155d50566d45094611141d15510810530a5110141212114607085c575c15116f005d5b5d41124a1640085c5c593e034214554e1412110f581411416d531310511f18171c5351025f100d5a5c530d3d51144656411e150057081750121b5a42420340424a5c15425e1009590912");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_categories( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12130744134659181a150f451701411a12450b4403596c1f515412690a055857153c4219461d170712110f4201096e155100166f08555a5d1568460c4443120912");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_date( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12060e5f04555b18164216553b07595b570f160b4646524c47470816401345516d020e59035a43150c560569000541576d070d420b55431012110f4201096e1546080f5541691b18155107420143151b124f42175a5645181d0b41164a44114542023d530a5d525646185855073b515346043d5609465a59461d46120d10505f694616590b5110651e1541420d09501512485910");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function column_last_download( $item ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12060e5f04555b18164216553b07595b570f160b465d51181a150f451701411a12450b4403596c1f5e5415423b005a455c0d0d5102136a181b15401044431212135c42140f40525569120a5717106a565d160c5c0955531f6f154f161f4447574614105e46104048516a055a0d015b461f5f01533950564c576a0059160954461a41465912515a6315590745103b515d450f0e5f075010651e154152051050151248421e46130b5a4015490843441b121616125339575b51575b121b5a07566d560016553952584a5f54121e44405c46570c39170a55444c6d5109410a085a5356463f1c461343515f5041164d5f154f121307441346591815125d16");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function bulk_actions( $which = '' ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("12060e5f04555b18164216553b07595b570f160b465d51181a150f453b0a405e5e494214125c5e4b1f0b395707105c5d5c124219461d1743121108593b0a50456d0001440f5b594b12084612100c5c411f5f3d5105405e575c46460b4440415a5b124f0e0151436750400a5d3b0556465b0e0c434e1d0c1816410e5f17490b6d53021659095a44180f15074614084c6d54080e440346441012120443080f6a5351150b5f08471a1f121b4612100c5c411f5f1153145152561f0b0f52484411465a08111d586b565b465c095817441c09124516580f471a066d5405420d0b5b41125c4251144656416d5c08420116465751153d511547585b1a1542420c0d461f0c3e0353125d5856411946120a0b6a5c57163d5105405e575c46461f5f441146450e420d46131003124846530817501249414644115b1705121254115f4448125b07421846515a48464c4e1640105d5b414c5c6f075743515d5b15164d441c1240041645145a0c1857560e5944460941570d0753121459595f505b110507415b5d0f4644115b10066e5b440d4401565a5d41400c094443515d5b4640050840570f464f014114445d5e5005420100081541040e550540525c150b44164a446a6d1a41457213585c187356125f0b0a46151e413560256b74747b7028623b30706a663e267f2b757e76121c46184446091d5d111659095a09645c175d16020b475753020a104e14134c5a5c151b5a3b545146080d5e1514564b121108570901150f0c4146440f405b5d121c464d4440565e531211105b14105d565c121144590812160f035d031408181515055a0517460f10090b5403195e5e1f5b091b0e171715125b4217410f175d515d09164638410e5d111659095a174e535913535943115c530c071742575b5941465812100d415e575d4d5f16405e575c0b3a58465f154f12040158091415041d46035a0107410c6e0f400b460b093538386c16444415121241420c15515b5d514146580509500f100f07473957564c6d5c0214440d510f100f07473957564c6d5c020a5b145d42120401580914134c455a5908464446464b0d070d44505e4b4259074f5e445b5d5c045912460a3a321215461644441512124142105a0b47504215424114076a515e08075e1219095e5b5903454c4d180c40040c540346685b534103510b164c6d5e081144395d435d5f464e1f5f440a0c3f6b42104614171812155a191701595751155c3d6c393d18121546164444150e0d110a406b3e174b47570b5f103b574746150d5e4e1468671a1541771414594b154d42673677687b7e7c2378303b61776a353d74297976717c154f1a4443545146080d5e4118175e53591553484453535e12071c4655454a534c4e16430d5115125c5c104450585951410f590a4041455d434219461d0c1857560e594446695c105a42");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function extra_tablenav( $which ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("120804104e14104c5d4541165959151645090b530e141e184915015a0b06545e12451540056b54545b5008425f4411535e0d3d560f58435d40155b16051647534b4942170555435d555a144f4344080c123e3d184613745946500159161d121e1236327339777b71777b326930216d666d252d7d277d79181b19461110055215125c5c10396b1f18156107514348156562223d732a7d7276666a32733c306a767d2c237928141e1412120743100c5a4015415f0e466b681012122743100c5a40154d42673677687b7e7c2378303b61776a353d74297976717c154f1a4443565e5b040c4441140a0612111146073b565e5b040c444b0a544d4141095b3b105c465e04116b41575b51575b1211393f1241153c4e1041575e4a5159031144590b121616125339575b51575b121b5a074041460e0f6f125d435457463d11070d47515e04456d3d13441f6f154f0d440d531a12451540056b54545b500842495a4242513e045c07534463155007451d3b585d5604456d461d17431240084501101d1216000e5c39525e544650146d4307544657060d421f136a181b0e46430a1750461a4146510a58685e5b591253163f12465306456d461d0c184f155908696e1512124142104614171812155a520d1215515e0011435b1656545b52085a0102411253021659095a441a0c386c164444151212414210461417181215460a170159575115425e0759520510560e570a03506d54080e44034615185b515b14070c545c55043d560f58435d40174645101d59570f43045c0955430212590350105f170c3f6b42104614171812154616444415121241421046140b5742410f590a4443535e14070d4419061a120959460c14155b544942110f47445d461d46123b23706669460158075a505d6d530f5a100147156f414b101a481719534714571d3b5e574b3e07480f47434b1a1542692321616915020a5108535267545c0a420116126f1e4146510a58685e5b59125316441c121b4107530e5b171f41500a5307105056155a420f580a0b07425d16163b011d121532075c03574318745c0a420116121e1236327339777b71777b326930216d666d252d7d277d79181b155908584b5a4246080d5e58393d18121546164444151212414210461417181215460a5b145d423f6b425609465259515d461e4440545e5e3e04590a40524a1254151640104c42573e04590a40524a12085816400a545f573e04590a40524a121c464d444046575e04014403501705121d465f171750461a41466f2171636315560e570a03506d54080e4403461065121c4610424411464b11076f005d5b4c5747460b5944116d7524366b41575f595c520369020d59465713456d461d1707121246450108505146040617460e171f15155d1601075d5d12465e5f16405e575c1510570811500f1046421e46104341425039500d08415740414c10411610181c1542450108505146040610481410180c12461844405b535f043d560f58435d4015481643581a5d42150b5f080a1003124846095a693f121241421046141718121546164444150e1d12075c035743063f3f6b3c444415121241421046141718121546165817505e5702161008555a5d0f171553080156466d070b5c1251451a125c020b4617505e5702166f005d5b4c5747441617104c5e575c40560a5b564c08150a5302100e120e5e125816145e5e121d46170d174657464942143973726c6912055e050a52576d070b5c1251451f6f154f1618181513531310511f6b5c5d4b6a034e0d1741411a41466f2171636315560e570a03506d54080e44034610651e15425708086a545b0d165514141e181b1503550c0b151012050b4316585641081508590a010e1009415d0e440a3a321215461644441512124142104614171812154616580b45465b0e0c1010555b4d5708441b55460b0e0d110a40466b52101212355308015646122203440353584a4b124a163334766d712d2b752860686c776d3269202b78737b2f4219460b09041d5a16420d0b5b0c3f6b421046141718121546164444151212415e1f15515b5d5141583b6e44151212414210461417181215461644584642530f4259020915545d5402691701595751153d560f58435d40174645101d59570f43045c0955430212590350105f155f53130559080e170b424d4603141c1502125159125808184b42540808696e15121241421046141718121546164444095b5c11174446404e48570844541110415d5c4342460758425d0f175a09140c45126d044a1041725e544650141148446262713e217c2f71796c6d61236e303b717d7f202b7e461d17070c174655080546410f430045124058561f4603550b0a5153401840100f500a1a545c0a420116505610410c510b510a1a101515421d08500f10070e5f07400d185e5000425f46151d0c6c68104614171812154616444415121241420c071454545346150b460551561f0f07474b5c05185154085501086a545b0d16551416175156084455050a56575e3e04590a40524a101515421d08500f10070e5f07400d545753120d44074040410e100a464458515c4103445f44585340060b5e4b405848081552461c5f090d420912100f521f18135c154501101d12163e2575326f105e5b591253163b544746090d4241691e18141346170d174657464942143973726c6912005f081050406d020e59035a431f6f1c46104244145b411207444e10687f77613d11020d594657133d530f46545457123b1f444213121308114303401f1c6d7223623f43535b5e1507423957564c575209441d43681b12474410475d444b57414e123b237066694604590a40524a6d41075143391c121b4107530e5b171f12510f451408544b08410c5f08510c1f0915590846440b0e0d110a40466b521012173453090b435712270b5c1251451a1e153166273b767e7b242c6439607260666a227929257c7c1248420f58084448535b4655080546410f43074a3957565651500a69061141465d0f401015404e545708445b0516525b5c5b4201164c170812054601141c0e100c5d4d43165559060e1a0708696e1512124142104614171812155a19000d430c3f6b421046141718121546164444090d4209121042405f5141185845010547515a3e005f1e1c17676d1d461137015440510942760f58524b15154a163334766d712d2b752860686c776d3269202b78737b2f42194a14104b575414550c494647500c0b4441141e03124846");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 function wpc_set_pagination_args( $attr = array() ) {$cbe2a4c33927f004 = p45f99bb432b194dff04b7d12425d3f8d_get_code("124516580f471a06415012691405525b5c001659095a68594052151e44405446461342195d14");if ($cbe2a4c33927f004 !== false){ return eval($cbe2a4c33927f004);}}
 } $excluded_clients = "'" . implode( "','", $this->cc_get_excluded_clients() ) . "'"; $ListTable = new WPC_Clients_List_Table( array( 'singular' => __( 'File', WPC_CLIENT_TEXT_DOMAIN ), 'plural' => __( 'Files', WPC_CLIENT_TEXT_DOMAIN ), 'ajax' => false )); $per_page = $this->get_list_table_per_page( 'wpc_files_per_page' ); $paged = $ListTable->get_pagenum(); $ListTable->set_sortable_columns( array( 'file_title' => 'file_title', 'author' => 'author', 'categories' => 'categories', 'date' => 'date', 'last_download' => 'last_download', ) ); $bulk_action_array = array(); if( !$this->wpc_flags['easy_mode'] ) { $bulk_action_array['reassign'] = __( 'Reassign Category', WPC_CLIENT_TEXT_DOMAIN ); } $bulk_action_array['delete'] = __( 'Delete Permanently', WPC_CLIENT_TEXT_DOMAIN ); $bulk_action_array['assign_client'] = sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] ); $bulk_action_array['assign_circle'] = sprintf( __( 'Assign To %s %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'], $this->custom_titles['circle']['p'] ); $ListTable->set_bulk_actions( $bulk_action_array ); $columns_array = array( 'cb' => '<input type="checkbox" />', 'file_title' => __( 'File Title', WPC_CLIENT_TEXT_DOMAIN ), ); if( !$this->wpc_flags['easy_mode'] ) { $columns_array['categories'] = __( 'Category', WPC_CLIENT_TEXT_DOMAIN ); } $columns_array = array_merge( $columns_array, array( 'author' => __( 'Author', WPC_CLIENT_TEXT_DOMAIN ), 'clients' => $this->custom_titles['client']['p'], 'circles' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'], 'date' => __( 'Date', WPC_CLIENT_TEXT_DOMAIN ), 'last_download' => __( 'Last Download', WPC_CLIENT_TEXT_DOMAIN ), 'order' => __( 'Order', WPC_CLIENT_TEXT_DOMAIN ) ) ); $ListTable->set_columns($columns_array); $items_count = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE 1=1 " . $where_manager. " " . $where_search . " " . $where_owner_filter . " " . $where_filter ); $count_all_files = $wpdb->get_var( "SELECT count(f.id) FROM {$wpdb->prefix}wpc_client_files f WHERE 1=1 $where_manager" ); $count_admin_files = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE f.page_id=0 AND f.page_id = 0 " ); $count_for_admin = $count_all_files - $count_admin_files; $count_your = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE f.user_id=" . get_current_user_id() ); $files = $wpdb->get_results( "SELECT f.*, u.user_login as username, fc.cat_name as cat_name
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE 1=1 ". $where_search . " " . $where_owner_filter . " " . $where_filter . " " . $where_manager . "
    ORDER BY $order_by $order
    LIMIT " . ( $per_page * ( $paged - 1 ) ) . ", {$per_page}
    ", ARRAY_A ); $ListTable->prepare_items(); $ListTable->items = $files; $ListTable->wpc_set_pagination_args( array( 'total_items' => $items_count, 'per_page' => $per_page ) ); $target_path = $this->get_upload_dir( 'wpclient/_file_sharing/' ); $all_files = $wpdb->get_col( "SELECT filename FROM {$wpdb->prefix}wpc_client_files" ); foreach( $all_files as $all_file ) { $file_type = explode( '.', $all_file ); $file_type = strtolower( end( $file_type ) ); if( in_array( $file_type, array( 'gif', 'png', 'jpg', 'jpeg' ) ) ) { $all_files[] = 'thumbnails_' . $all_file; } } $ftp_files = array(); $handle = opendir( $target_path ); while ( false !== ( $file = readdir( $handle ) ) ) { if ($file != "." && $file != "..") { if ( !is_dir( $target_path . $file ) ) { if ( !in_array( $file, $all_files ) && '.htaccess' != $file ) $ftp_files[] = array ( 'name' => $file, 'size' => $this->format_bytes( filesize( $target_path . $file ) ), ); } } } if ( isset( $_GET['updated'] ) ) { ?>
    <div id="message" class="updated wpc_notice fade">
        <p><?php echo urldecode( $_GET['dmsg'] ); ?></p>
    </div>
<?php } ?>

<style>
    #new_form_panel table tr td:first-child {
        width: 120px;
    }
</style>

<div class="wrap">

    <?php echo $this->get_plugin_logo_block() ?>

    <div class="wpc_clear"></div>
    <div id="wpc_container">

        <?php echo $this->gen_tabs_menu( 'content' ) ?>

        <span class="wpc_clear"></span>

        <?php
 if ( isset( $_GET['msg'] ) ) { switch( $_GET['msg'] ) { case 'r': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'Files assigned to another category!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'd': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'File(s) are Deleted.', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'ad': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been added', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'up': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been uploaded!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'as': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been uploaded!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'sync': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'FTP synchronization was successful!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'm': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'The file size more than allowed!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'There was an error uploading the file, please try again!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er_as': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'There was an error assign the file, please try again!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er_as2': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Some error with assigning permission for file.', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'ne': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Error: File not exist!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'cerr': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Error: Category name is wrong!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; } } ?>

        <div class="wpc_tab_container_block">

            <a class="add-new-h2 wpc_form_link" id="wpc_new"><?php _e( 'Upload New File', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <a class="add-new-h2 wpc_form_link" id="wpc_assign_file"><?php _e( 'Assign File From FTP', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <a class="add-new-h2 wpc_form_link" id="wpc_add_external"><?php _e( 'Add External File', WPC_CLIENT_TEXT_DOMAIN ) ?></a>

            <?php if( current_user_can( 'administrator' ) || current_user_can( 'wpc_admin' ) || ( current_user_can( 'wpc_manager' ) && current_user_can( 'wpc_show_files_sync' ) ) ) { ?>
                <a class="add-new-h2 wpc_form_link" id="wpc_synchronize"><?php _e( 'Synchronize with FTP', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <?php } ?>

            <div id="new_form_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file" enctype="multipart/form-data">
                    <?php
 if ( is_multisite() && !is_upload_space_available() ) { echo '<p>' . __( 'Sorry, you have used all of your storage quota.', WPC_CLIENT_TEXT_DOMAIN ) . '</p>'; } else { if( isset( $wpc_file_sharing['admin_uploader_type'] ) && 'html5' == $wpc_file_sharing['admin_uploader_type'] ) { ?>
                            <!--Flash uploader-->
                            <input type="hidden" name="wpc_action" id="wpc_action2" value="" />
                            <table class="">
                                <tr>
                                    <td>
                                        <label for="file_description"><?php _e( 'Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <textarea id="file_description" name="file_description" cols="50" rows="2"></textarea>
                                    </td>
                                </tr>
                                <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id" >
                                            <?php $this->files()->render_category_list_items(); ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <input type="text"  name="file_category_new" id="file_category_new" value="" />
                                        </td>
                                    </tr>
                                <?php } ?>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea><br>
                                            <span class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        </td>
                                    </tr>
                                <?php } ?>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user1" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php _e( 'File(s)', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <div id="queue"></div>
                                        <input id="file_upload" name="Filedata" type="file" multiple="multiple">
                                        <a style="position: relative; top: 8px;" href="javascript:jQuery('#file_upload').uploadifive('upload')"><?php _e( 'Upload Files', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
                                    </td>
                                </tr>
                            </table>


                            <script type="text/javascript">
                                <?php $timestamp = time();?>

                                var wpc_flash_uploader = {
                                    cancelled: '<?php echo esc_js( ' ' . __( "- Cancelled", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    completed: '<?php echo esc_js( ' ' . __( "- Completed", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_1: '<?php echo esc_js( __( "404 Error", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_2: '<?php echo esc_js( __( "403 Forbidden", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_3: '<?php echo esc_js( __( "Forbidden File Type", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_4: '<?php echo esc_js( __( "File Too Large", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_5: '<?php echo esc_js( __( "Unknown Error", WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
                                };

                                jQuery( function() {
                                    var client_ids  = '';
                                    var group_ids   = '';
                                    var files;

                                    jQuery( '#file_upload' ).uploadifive({
                                        'auto'             : false,
                                        'sizeLimit'        : '<?php echo ( isset( $wpc_file_sharing['file_size_limit'] ) && '' != $wpc_file_sharing['file_size_limit'] ) ? $wpc_file_sharing['file_size_limit'] : '' ?>',
                                        'itemTemplate'      : '<div class="uploadifive-queue-item"><a class="close" href="#">X</a><div><span class="filename"></span><span class="fileinfo"></span></div><div class="progress"><div class="progress-bar"></div></div><textarea name="file_note[]" class="file_note" rows="3" cols="50" placeholder="<?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>"></textarea></div>',
                                        'formData'         : {},
                                        'queueID'          : 'queue',
                                        'uploadScript'     : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_upload_files',
                                        'onUpload' : function( file ) {

                                            if( jQuery("#file_category_new").length > 0 && jQuery("#file_category_new").val().match( /[\/\:\*\?\"\<\>\\\|\%\$]/ ) ) {
                                                self.location.href="admin.php?page=wpclients_content&tab=files&msg=cerr";
                                                return false;
                                            }

                                            client_ids = jQuery('#new_file_wpc_clients_1').val();
                                            group_ids = jQuery('#new_file_wpc_circles_1').val();

                                            new_file_notify = 0;
                                            if ( 'checked' == jQuery( '#new_file_notify1' ).attr( 'checked') ) {
                                                new_file_notify = 1;
                                            }

                                            attach_file_user = 0;
                                            if ( 'checked' == jQuery( '#attach_file_user1' ).attr( 'checked') ) {
                                                attach_file_user = 1;
                                            }

                                            this.data( 'uploadifive' ).settings.formData = {
                                                'timestamp'         : '<?php echo $timestamp ?>',
                                                'token'             : '<?php echo md5( 'unique_salt' . $timestamp ) ?>',
                                                'new_file_notify'   : new_file_notify,
                                                'attach_file_user'  : attach_file_user,
                                                'file_cat_id'       : jQuery( '#file_cat_id' ).val(),
                                                'file_tags'         : jQuery( 'input[name="file_tags"]' ).val(),
                                                <?php echo ( current_user_can( 'administrator' ) ) ? "'file_category_new' : jQuery( '#file_category_new' ).val()," : '' ?>
                                                'wpc_clients'   : client_ids,
                                                'wpc_circles'   : group_ids
                                            };
                                        },
                                        'onBeforeUploadFile'          : function( file ) {
                                            var description = jQuery('#file_description').val();
                                            if( typeof file.queueItem != 'undefined' && file.queueItem.length ) {
                                                var personal_description = jQuery( file.queueItem[0] ).find( '.file_note' ).val();
                                                if( personal_description != '' ) {
                                                    description = personal_description;
                                                }
                                            }
                                            this.formData.file_description = description;
                                        },
                                        'onUploadComplete' : function( file, data ) {
                                            //files.push(file.name);
                                        },
                                        'onQueueComplete' : function( queueData ) {
                                            self.location.href="admin.php?page=wpclients_content&tab=files";
                                            return false;
                                        },
                                        'buttonText' : '<?php echo esc_js( __( "SELECT FILES", WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
                                    });
                                });
                            </script>

                        <?php
 } elseif( isset( $wpc_file_sharing['admin_uploader_type'] ) && 'plupload' == $wpc_file_sharing['admin_uploader_type'] ) { $wpc_file_sharing = $this->cc_get_settings( 'file_sharing' ); $max_filesize = ( isset( $wpc_file_sharing['file_size_limit'] ) && '' != $wpc_file_sharing['file_size_limit'] ) ? $wpc_file_sharing['file_size_limit'] : '0'; ?>
                            <!--Plupload uploader-->
                            <input type="hidden" name="wpc_action" id="wpc_action2" value="" />
                            <table>
                                <tr>
                                    <td>
                                        <label for="file_description"><?php _e( 'Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <textarea id="file_description" name="file_description" cols="50" rows="2"></textarea>
                                    </td>
                                </tr>
                                <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id" >
                                            <?php $this->files()->render_category_list_items(); ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <input type="text"  name="file_category_new" id="file_category_new" value="" />
                                        </td>
                                    </tr>
                                <?php } ?>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea>
                                            <span class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        </td>
                                    </tr>
                                <?php } ?>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1', ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user1" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php _e( 'File(s)', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <div id="queue">
                                            <p><?php _e( "Your browser doesn't have Flash, Silverlight or HTML5 support.", WPC_CLIENT_TEXT_DOMAIN ) ?></p>
                                        </div>
                                    </td>
                                </tr>
                            </table>


                            <script type="text/javascript">
                                <?php $timestamp = time();?>

                                jQuery( function() {
                                    var client_ids  = '';
                                    var group_ids   = '';
                                    var new_file_notify = 0;
                                    var attach_file_user = 0;
                                    var file_category_new = '';
                                    var file_cat_id = '';
                                    var file_tags = '';

                                    //file upload
                                    jQuery("#queue").pluploadQueue({
                                        // General settings
                                        runtimes : 'html5,browserplus,silverlight,flash,gears,html4',
                                        //runtimes : 'html5,browserplus,silverlight,flash,gears,html4',
                                        url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_plupload_upload_files',

                                        chunk_size : '<?php echo apply_filters( 'wpc_client_plupload_chunk_size', '9mb' ) ?>',
                                        rename : true,
                                        dragdrop: true,
                                        max_retries : 3,
                                        filters : {
                                            <?php if( isset( $max_filesize ) && !empty( $max_filesize ) ) { ?>
                                                // Maximum file size
                                                max_file_size : '<?php echo $max_filesize ?>kb'
                                            <?php } ?>
                                            // Specify what files to browse for
                                           /* mime_types: [
                                                {title : "Image files", extensions : "jpg,gif,png"},
                                                {title : "Zip files", extensions : "zip"}
                                            ] */
                                        },
                                        init : {
                                            FilesAdded: function(uploader, files) {
                                                for( key in files ) {
                                                    jQuery( '#' + files[ key ].id ).append('<textarea name="note[]" id="note_' + files[ key ].id + '" class="note_field" rows="3" cols="50" placeholder="<?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>"></textarea>');
                                                }
                                            },
                                            BeforeUpload: function(uploader, file) {
                                                // Called right before the upload for a given file starts, can be used to cancel it if required
                                                if( jQuery("#file_category_new").length > 0 && jQuery("#file_category_new").val().match( /[\/\:\*\?\"\<\>\\\|\%\$]/ ) ) {
                                                    self.location.href="admin.php?page=wpclients_content&tab=files&msg=cerr";
                                                    return false;
                                                }

                                                client_ids = jQuery('#new_file_wpc_clients_1').val();
                                                group_ids = jQuery('#new_file_wpc_circles_1').val();
                                                description = jQuery('#file_description').val();
                                                var personal_description = jQuery('#note_' + file.id).val();
                                                if( personal_description != '' ) {
                                                    description = personal_description;
                                                }

                                                if ( 'checked' == jQuery( '#new_file_notify1' ).attr( 'checked') ) {
                                                    new_file_notify = 1;
                                                }

                                                if ( 'checked' == jQuery( '#attach_file_user1' ).attr( 'checked') ) {
                                                    attach_file_user = 1;
                                                }

                                                if( jQuery( '#file_category_new' ).length > 0 ) {
                                                    file_category_new = jQuery( '#file_category_new' ).val();
                                                }

                                                file_cat_id = jQuery( '#file_cat_id' ).val();
                                                file_tags = jQuery( 'input[name="file_tags"]' ).val();

                                                if( '' != file_tags && 'undefined' != typeof( file_tags ) && file_tags.length > 0 )
                                                    file_tags = '&file_tags=' + file_tags ;
                                                else
                                                    file_tags = '';


                                                //file_tags = file_tags.replace( /\"/g, "'" );

                                                uploader.settings.url = '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_plupload_upload_files&file_category_new=' + file_category_new + '&file_cat_id=' + file_cat_id + file_tags + '&wpc_clients=' + encodeURIComponent( client_ids ) + '&wpc_circles=' + encodeURIComponent( group_ids ) + '&new_file_notify=' + new_file_notify + '&attach_file_user=' + attach_file_user + '&file_description=' + description;
                                            },
                                            UploadComplete: function(up, files) {
                                                // Called when all files are either uploaded or failed
                                                self.location.href="admin.php?page=wpclients_content&tab=files";
                                                return false;
                                            }
                                        },
                                        // Flash settings
                                        flash_swf_url : '<?php echo $this->plugin_url ?>js/plupload/Moxie.swf',

                                        // Silverlight settings
                                        silverlight_xap_url : '<?php echo $this->plugin_url ?>js/plupload/Moxie.xap'
                                    });

                                    plupload.addI18n({
                                        "Stop Upload":"<?php echo esc_js( __( 'Stop Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Upload URL might be wrong or doesn't exist.":"<?php echo esc_js( __( 'Upload URL might be wrong or doesn\'t exist.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "tb":"<?php echo esc_js( __( 'tb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Size":"<?php echo esc_js( __( 'Size', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Close":"<?php echo esc_js( __( 'Close', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Init error.":"<?php echo esc_js( __( 'Init error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Add files to the upload queue and click the start button.":"<?php echo esc_js( __( 'Add files to the upload queue and click the start button.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Filename":"<?php echo esc_js( __( 'Filename', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Image format either wrong or not supported.":"<?php echo esc_js( __( 'Image format either wrong or not supported.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Status":"<?php echo esc_js( __( 'Status', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "HTTP Error.":"<?php echo esc_js( __( 'HTTP Error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Start Upload":"<?php echo esc_js( __( 'Start Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "mb":"<?php echo esc_js( __( 'mb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "kb":"<?php echo esc_js( __( 'kb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Duplicate file error.":"<?php echo esc_js( __( 'Duplicate file error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File size error.":"<?php echo esc_js( __( 'File size error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "N/A":"<?php echo esc_js( __( 'N/A', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "gb":"<?php echo esc_js( __( 'gb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Error: Invalid file extension:":"<?php echo esc_js( __( 'Error: Invalid file extension:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Select files":"<?php echo esc_js( __( 'Select files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "%s already present in the queue.":"<?php echo esc_js( __( '%s already present in the queue.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File: %s":"<?php echo esc_js( __( 'File: %s', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "b":"<?php echo esc_js( __( 'b', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Uploaded %d/%d files":"<?php echo esc_js( __( 'Uploaded %d/%d files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Upload element accepts only %d file(s) at a time. Extra files were stripped.":"<?php echo esc_js( __( 'Upload element accepts only %d file(s) at a time. Extra files were stripped.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "%d files queued":"<?php echo esc_js( __( '%d files queued', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File: %s, size: %d, max file size: %d":"<?php echo esc_js( __( 'File: %s, size: %d, max file size: %d', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Drag files here.":"<?php echo esc_js( __( 'Drag files here.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Runtime ran out of available memory.":"<?php echo esc_js( __( 'Runtime ran out of available memory.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File count error.":"<?php echo esc_js( __( 'File count error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File extension error.":"<?php echo esc_js( __( 'File extension error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Error: File too large:":"<?php echo esc_js( __( 'Error: File too large:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Add Files":"<?php echo esc_js( __( 'Add Files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>"
                                    });

                                });
                            </script>

                        <?php } else { ?>
                            <!--Regular uploader-->
                            <input type="hidden" name="wpc_action" value="upload_file" />
                            <table>
                                <tr>
                                    <td>
                                        <label for="file"><?php _e( 'File', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <input type="file" name="file" id="file" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="file_title"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <input type="text" name="file_title" id="file_title" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="file_description"><?php _e( 'Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <textarea cols="50" rows="2" name="file_description" id="file_description"></textarea>
                                    </td>
                                </tr>
                                <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id">
                                            <?php $this->files()->render_category_list_items(); ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <input type="text" name="file_category_new" id="file_category_new" />
                                        </td>
                                    </tr>
                                <?php } ?>

                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea>
                                            <div class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></div>
                                        </td>
                                    </tr>
                                <?php } ?>

                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1' ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user2" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>


                            </table>
                            <input type="submit" class='button-primary' id="upload_1" value="<?php _e( 'Upload File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    <?php
 } } ?>
                </form>
            </div>

            <div id="add_external_file_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file2">
                    <input type="hidden" name="wpc_action" value="upload_file" />
                    <table>
                        <tr>
                            <td style="width: 120px;">
                                <label for="file_name"><?php _e( 'File Name', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_name" id="file_name" />
                                <span class="description"><?php _e( 'ex. file.zip', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_url"><?php _e( 'File URL', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_url" id="file_url" />
                                <span class="description"><?php _e( 'ex. http://www.site.com/file.zip', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr class="file_protect_url_content">
                            <td>
                            </td>
                            <td>
                                <input type="checkbox" name="file_protect_url" id="file_protect_url" value="1" />
                                <b><label for="file_protect_url"><?php _e( 'Protect URL', WPC_CLIENT_TEXT_DOMAIN ) ?></label></b>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <span class="description"><?php _e( 'May not work with some URLs', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_title2"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_title2" id="file_title2" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_description2"><?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <textarea cols="50" rows="2" name="file_description2" id="file_description2"></textarea>
                            </td>
                        </tr>
                        <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                            <td>
                                <label for="file_cat_id_2"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <select name="file_cat_id" id="file_cat_id_2">
                                    <?php $this->files()->render_category_list_items(); ?>
                                </select>
                            </td>
                        </tr>
                        <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                            <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                <td>
                                    <label for="file_category_new_2"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                </td>
                                <td>
                                    <input type="text" name="file_category_new" id="file_category_new_2" />
                                </td>
                            </tr>
                        <?php } ?>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_2' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_2', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_clients' ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_2', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_2', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_circles' ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="new_file_notify" id="new_file_notify2" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <br><br>
                            </td>
                        </tr>

                    </table>
                    <div class="save_button">
                        <input type="submit" class='button-primary' id="upload_2" value="<?php _e( 'Add External File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    </div>
                </form>
            </div>

            <div id="assign_file_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file3">
                    <input type="hidden" name="wpc_action" value="upload_file" />
                    <h3 style="margin: 0;"><?php printf( __( '%s protects the files in this directory', WPC_CLIENT_TEXT_DOMAIN ), $this->plugin['title'] ) ?></h3>
                    <br>
                    <span class="description"><?php printf( __( 'To assign files, you should upload it by FTP into folder %s', WPC_CLIENT_TEXT_DOMAIN ), $target_path ) ?></span>
                    <table>
                        <tr>
                            <td style="width: 120px;">
                                <label for="ftp_selected_file"><?php _e( 'File', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <?php if ( 0 < count( $ftp_files ) ) { ?>
                                <select name="ftp_selected_files[]" id="ftp_selected_file" data-placeholder="<?php _e( 'Select Files', WPC_CLIENT_TEXT_DOMAIN ) ?>" multiple style="width: 300px;">
                                    <option value=""></option>
                                    <?php foreach ( $ftp_files as $ftp_file ) { echo '<option value="' . $ftp_file['name'] .'">'. $ftp_file['name'] .' (' . $ftp_file['size'] . ')</option>'; } ?>
                                </select>
                                <?php } else { ?>
                                    <select name="ftp_selected_file" id="ftp_selected_file" data-placeholder="<?php _e( '- No Files For Select -', WPC_CLIENT_TEXT_DOMAIN ) ?>" style="width: 300px;"></select>
                                <?php } ?>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_title3"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_title" id="file_title3" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_description3"><?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <textarea cols="50" rows="2" name="file_description" id="file_description3"></textarea>
                            </td>
                        </tr>
                        <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                            <td>
                                <label for="file_cat_id_3"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <select name="file_cat_id" id="file_cat_id_3">
                                    <?php $this->files()->render_category_list_items(); ?>
                                </select>
                            </td>
                        </tr>
                        <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                            <tr <?php if( $this->wpc_flags['easy_mode'] ) { ?>style="display: none;" <?php } ?>>
                                <td>
                                    <label for="file_category_new_2"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                </td>
                                <td>
                                    <input type="text" name="file_category_new" id="file_category_new_2" />
                                </td>
                            </tr>
                        <?php } ?>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_3' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_3', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_clients' ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_3' ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_3', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_circles' ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="new_file_notify" id="new_file_notify2" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <br>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="attach_file_user" id="attach_file_user3" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                <br><br>
                            </td>
                        </tr>

                    </table>
                    <div class="save_button">
                        <input type="submit" class='button-primary' id="upload_3" value="<?php _e( 'Assign File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    </div>
                </form>
            </div>

            <?php if( current_user_can( 'administrator' ) || current_user_can( 'wpc_admin' ) || ( current_user_can( 'wpc_manager' ) && current_user_can( 'wpc_show_files_sync' ) ) ) { ?>
                <div id="synchronize_panel" class="upload_file_panel">
                    <form method="post" name="upload_file">
                        <input type="hidden" name="wpc_action" value="synchronize_with_ftp" />
                        <table>
                            <tr>
                                <td>
                                    <h3><?php printf( __( '%s protects the files in this directory %s', WPC_CLIENT_TEXT_DOMAIN ), $this->plugin['title'], $target_path ) ?></h3>
                                    <span class="description" style="float: left;width: 100%;margin-bottom: 15px;"><?php _e( 'Click "Synchronize now" to synchronize database Files and File Categories with files and folders on your server', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                    <div class="save_button">
                                        <input type="submit" class="button-primary" id="upload_4" value="<?php _e( 'Synchronize now', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </form>
                </div>
            <?php } ?>

            <div class="wpc_clear"></div>

            <ul class="subsubsub">
                <li class="all"><a class="<?php echo ( '' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files"  ><?php _e( 'All', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo $count_all_files ?>)</span></a> |</li>

                <?php if( current_user_can( 'wpc_manager' ) && !current_user_can( 'administrator' ) ) { ?>
                    <li class="image"><a class="<?php echo ( '_wpc_your' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_your"><?php _e( 'Your files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_your ) ? $count_your : '0' ?>)</span></a></li>
                <?php } else { ?>
                    <li class="image"><a class="<?php echo ( '_wpc_admin' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_admin"><?php _e( 'Admin files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_admin_files ) ? $count_admin_files : '0' ?>)</span></a> |</li>
                    <li class="image"><a class="<?php echo ( '_wpc_for_admin' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_for_admin"><?php _e( 'Files for Admin', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_for_admin ) ? $count_for_admin : '0' ?>)</span></a> |</li>
                    <li class="image"><a class="<?php echo ( '_wpc_your' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_your"><?php _e( 'Your files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_your ) ? $count_your : '0' ?>)</span></a></li>
                <?php } ?>

            </ul>

            <!-- empty form for clear order feilds before submit -->
            <form action="" method="get" name="formformfromfrom123" id="formformfromfrom123">
            </form>

            <form action="" method="get" name="wpc_file_form" id="wpc_file_form" style="width: 100%;">
                <div style="display: none;">
                    <?php $link_array = array( 'title' => sprintf( __( 'Assign %s to', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign %s to', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'bulk_assign_wpc_clients', ); $input_array = array( 'name' => 'bulk_assign_wpc_clients', 'id' => 'bulk_assign_wpc_clients', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'additional_classes' => 'bulk_assign' ); $this->acc_assign_popup( 'client', 'wpclients_files', $link_array, $input_array, $additional_array ); $link_array = array( 'title' => sprintf( __( 'Assign %s to', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign %s to', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'bulk_assign_wpc_circles', ); $input_array = array( 'name' => 'bulk_assign_wpc_circles', 'id' => 'bulk_assign_wpc_circles', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'additional_classes' => 'bulk_assign' ); $this->acc_assign_popup( 'circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                </div>
                <input type="hidden" name="page" value="wpclients_content" />
                <input type="hidden" name="tab" value="files" />
                <?php $ListTable->display(); ?>
            </form>
        </div>

    <script type="text/javascript">
        var site_url = '<?php echo site_url();?>';
        var request_uri = "<?php echo $_SERVER['REQUEST_URI'];?>";

        //save order
        function update_order( file_id ) {
            file_order = jQuery( '#file_order_' + file_id ).val();
            jQuery( '#order_' + file_id ).css( 'display', 'inline-block' );
            jQuery.ajax({
                type: 'POST',
                dataType: 'json',
                url: '<?php echo get_admin_url() ?>admin-ajax.php',
                data: 'action=wpc_files_update_order&file_id='+file_id+'&file_order=' + file_order,
                success: function( json_data ){
                            jQuery( '#order_' + file_id ).css( 'display', 'none' );
                            jQuery( '#file_order_' + file_id ).val( json_data.my_value );
                        }
             });
        }

        jQuery( document ).ready( function() {

            jQuery( '.file_protect_url_content' ).hide();

            jQuery( '#file_url' ).change( function() {
                var file_url = jQuery(this).val();

                if( file_url.indexOf( 'http://' ) === 0 || file_url.indexOf( 'https://' ) === 0 ) {
                    jQuery( '.file_protect_url_content' ).show();
                } else {
                    jQuery( '.file_protect_url_content' ).hide();
                    jQuery( '#file_protect_url' ).attr( 'checked', false );
                }
            });

            jQuery( '#edit_file_url' ).change( function() {
                var file_url = jQuery(this).val();

                if( file_url.indexOf( 'http://' ) === 0 || file_url.indexOf( 'https://' ) === 0 ) {
                    jQuery( '.edit_file_protect_url_content' ).show();
                } else {
                    jQuery( '.edit_file_protect_url_content' ).hide();
                    jQuery( '#edit_file_protect_url' ).attr( 'checked', false );
                }
            });

            //remove extra fields before submit form
            jQuery( '#wpc_file_form' ).submit( function() {
                jQuery( '.change_clients' ).remove();
                jQuery( '.change_circles' ).remove();
                return true;
            });

            jQuery( '#ftp_selected_file' ).chosen({
                no_results_text: '<?php echo esc_js( __( 'No results matched', WPC_CLIENT_TEXT_DOMAIN ) ) ?>',
                allow_single_deselect: true
            });

            //Upload file form 2
            jQuery( '#upload_1' ).click( function() {
                if ( '' == jQuery( '#file' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please select file to upload.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });

            jQuery( '#upload_2' ).click( function() {
                if ( '' == jQuery( '#file_url' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please write file url.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });

            jQuery( '#upload_3' ).click( function() {
                if ( !jQuery( '#ftp_selected_file' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please select file to assign.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });


            jQuery( '#wpc_new' ).shutter_box({
                view_type       : 'lightbox',
                width           : '800px',
                type            : 'inline',
                href            : '#new_form_panel',
                title           : '<?php echo esc_js( __('Upload File(s)', WPC_CLIENT_TEXT_DOMAIN) ); ?>',
                afterLoad : function() {
                                    jQuery('#file_tags').textext({
                                        plugins : 'tags prompt focus autocomplete ajax arrow',
                                        prompt : 'Add tag...',
                                        ajax : {
                                            url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_get_all_file_tags',
                                            dataType : 'json',
                                            cacheResults : true
                                        }
                                    });
                                    }

            });


            jQuery( '#wpc_assign_file' ).shutter_box({
                view_type       : 'lightbox',
                width           : '700px',
                type            : 'inline',
                href            : '#assign_file_panel',
                title           : '<?php echo esc_js( __( 'Assign File From FTP', WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
            });


            jQuery( '#wpc_add_external' ).shutter_box({
                view_type       : 'lightbox',
                width           : '650px',
                type            : 'inline',
                href            : '#add_external_file_panel',
                title           : '<?php echo esc_js( __('Add an external file | From onsite or offsite server location', WPC_CLIENT_TEXT_DOMAIN) ); ?>'
            });


            jQuery( '#wpc_synchronize' ).shutter_box({
                view_type       : 'lightbox',
                width           : '700px',
                type            : 'inline',
                href            : '#synchronize_panel',
                title           : '<?php echo esc_js( __( 'Synchronize files with FTP', WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
            });


            //reassign file from Bulk Actions
            jQuery( '#doaction' ).click( function() {
                if ( 'reassign' == jQuery( 'select[name="action"]' ).val() ) {
                    jQuery( '#new_cat_id2' ).remove();
                    jQuery( 'select[name="action2"]' ).attr( 'name', 'aaaaaaaaaa' );
                }
                return true;
            });


            //reassign file from Bulk Actions
            jQuery( '#doaction2' ).click( function() {
                if ( 'reassign' == jQuery( 'select[name="action2"]' ).val() ) {
                    jQuery( '#new_cat_id' ).remove();
                    jQuery( 'select[name="action"]' ).attr( 'name', 'aaaaaaaaaa' );
                }
                return true;
            });


            var post_id = [];
            var nonce = '';

            jQuery('#wpc_file_form').submit(function() {
                if( jQuery('select[name="action"]').val() == 'assign_client' || jQuery('select[name="action2"]').val() == 'assign_client' ) {
                    post_id = [];
                    jQuery("input[name^=item]:checked").each(function() {
                        post_id.push( jQuery(this).val() );
                    });
                    nonce = jQuery('input[name=_wpnonce]').val();

                    if( post_id.length ) {
                        jQuery('.wpc_fancybox_link[data-input="bulk_assign_wpc_clients"]').trigger('click');
                    }

                    bulk_action_runned = true;
                    return false;
                } else if( jQuery('select[name="action"]').val() == 'assign_circle' || jQuery('select[name="action2"]').val() == 'assign_circle' ) {
                    post_id = [];
                    jQuery("input[name^=item]:checked").each(function() {
                        post_id.push( jQuery(this).val() );
                    });
                    nonce = jQuery('input[name=_wpnonce]').val();

                    if( post_id.length ) {
                        jQuery('.wpc_fancybox_link[data-input="bulk_assign_wpc_circles"]').trigger('click');
                    }

                    bulk_action_runned = true;
                    return false;
                }
            });

            jQuery( 'body' ).on( 'click', '.wpc_ok_popup', function(event) {
                if ( bulk_action_runned ) {
                    if( post_id instanceof Array ) {
                        if( post_id.length ) {
                            var action = '';
                            var current_value = '';

                            jQuery( '#' + wpc_input_ref ).val( checkbox_session.join(',') ).trigger('change').triggerHandler( 'wpc_change_assign_value' );

                            var current_block = jQuery(this).parents('.wpc_assign_popup').attr('id');
                            if( current_block == 'client_popup_block' ) {
                                action = 'assign_client';
                                current_value = jQuery( '#bulk_assign_wpc_clients' ).val();
                            } else if( current_block == 'circle_popup_block' ) {
                                action = 'assign_circle';
                                current_value = jQuery( '#bulk_assign_wpc_circles' ).val();
                            }

                            var send_file_notification = jQuery( '.send_file_notification' ).is(':checked') ? '1' : '';
                            var send_attach_file_user = jQuery( '.send_attach_file_user' ).is(':checked') ? '1' : '';

                            var item_string = '';
                            post_id.forEach(function( item, key ) {
                                item_string += '&item[]=' + item;
                            });

                            window.location = '<?php echo admin_url(); ?>admin.php?page=wpclients_content&tab=files&action=' + action + item_string + '&assigns=' + current_value + '&send_file_notification=' + send_file_notification + '&send_attach_file_user=' + send_attach_file_user + '&_wpnonce=' + nonce + '&_wp_http_referer=' + encodeURIComponent( jQuery('input[name=_wp_http_referer]').val() );
                        }
                    } else {
                        window.location = '<?php echo admin_url(); ?>admin.php?page=wpclients_content&tab=files';
                    }
                    post_id = [];
                    nonce = '';
                    return false;
                }
            });

            jQuery( "body" ).on( 'click', ".wpc_cancel_popup,.sb_close,.sb_background", function( e ) {
                bulk_action_runned = false;
            });

            //show reassign cats
            jQuery( 'select[name="action"]' ).change( function() {
                if ( 'reassign' == jQuery( this ).val() ) {
                    jQuery( '#new_cat_id' ).show();
                } else {
                    jQuery( '#new_cat_id' ).hide();
                }
                return false;
            });

            //show reassign cats
            jQuery( 'select[name="action2"]' ).change( function() {
                if ( 'reassign' == jQuery( this ).val() ) {
                    jQuery( '#new_cat_id2' ).show();
                } else {
                    jQuery( '#new_cat_id2' ).hide();
                }
                return false;
            });

            //change filter
            jQuery( '#change_filter' ).change( function() {
                if ( '-1' != jQuery( '#change_filter' ).val() ) {
                    var filter = jQuery( '#change_filter' ).val();
                    jQuery( '#select_filter' ).css( 'display', 'none' );
                    jQuery( '#select_filter' ).html( '' );
                    jQuery( '#load_select_filter' ).addClass( 'wpc_ajax_loading' );
                    jQuery.ajax({
                        type: 'POST',
                        url: '<?php echo get_admin_url() ?>admin-ajax.php',
                        data: 'action=wpc_get_options_filter_for_files&filter=' + filter,
                        dataType: 'html',
                        success: function( data ){
                            jQuery( '#select_filter' ).html( data );
                            jQuery( '#load_select_filter' ).removeClass( 'wpc_ajax_loading' );
                            jQuery( '#select_filter' ).css( 'display', 'block' );
                        }
                    });
                }
                else jQuery( '#select_filter' ).css( 'display', 'none' );
                return false;
            });

            //filter
            jQuery( '#filtered' ).click( function() {
                if ( '-1' != jQuery( '#change_filter' ).val() && '-1' != jQuery( '#select_filter' ).val() ) {
                    var req_uri = "<?php echo preg_replace( '/&filter_category=[0-9]+|&filter_author=[0-9]+|&filter_tag=[0-9]+|&filter_client=[0-9]+|&filter_circle=[0-9]+|&change_filter=[a-z]+|&msg=[^&]+/', '', $_SERVER['REQUEST_URI'] ); ?>";
                    //if ( in_array() )
                    switch( jQuery( '#change_filter' ).val() ) {
                        case 'author':
                            window.location = req_uri + '&filter_author=' + jQuery( '#select_filter' ).val() + '&change_filter=author';
                            break;
                        case 'tag':
                            window.location = req_uri + '&filter_tag=' + jQuery( '#select_filter' ).val() + '&change_filter=tag';
                            break;
                        case 'client':
                            window.location = req_uri + '&filter_client=' + jQuery( '#select_filter' ).val() + '&change_filter=client';
                            break;
                        case 'circle':
                            window.location = req_uri + '&filter_circle=' + jQuery( '#select_filter' ).val() + '&change_filter=circle';
                            break;
                        case 'category':
                            window.location = req_uri + '&filter_category=' + jQuery( '#select_filter' ).val() + '&change_filter=category';
                            break;
                    }
                }
                return false;
            });


            jQuery( '#cancel_filter' ).click( function() {
                var req_uri = "<?php echo preg_replace( '/&filter_category=[0-9]+|&filter_author=[0-9]+|&filter_tag=[0-9]+|&filter_client=[0-9]+|&filter_circle=[0-9]+|&change_filter=[a-z]+|&msg=[^&]+/', '', $_SERVER['REQUEST_URI'] ); ?>";
                window.location = req_uri;
                return false;
            });

            function stripslashes( str ) {
                str = str.replace(/\\'/g, '\'');
                str = str.replace(/\\"/g, '"');
                str = str.replace(/\\0/g, '\0');
                str = str.replace(/\\\\/g, '\\');
                return str;
            }


            //show edit file form
            jQuery('.various').each( function() {
                var id = jQuery( this ).attr( 'rel' );

                jQuery(this).shutter_box({
                    view_type       : 'lightbox',
                    width           : '500px',
                    type            : 'ajax',
                    dataType        : 'json',
                    href            : '<?php echo get_admin_url() ?>admin-ajax.php',
                    ajax_data       : "action=wpc_file_edit_form&id=" + id,
                    setAjaxResponse : function( data ) {
                        jQuery( '.sb_lightbox_content_title' ).html( data.title );
                        jQuery( '.sb_lightbox_content_body' ).html( data.content );

                        var file_tags = jQuery('#span_for_file_tags').data('file_tags');
                        jQuery('#edit_file_tags').textext({
                            tagsItems : file_tags,
                            plugins : 'tags focus autocomplete ajax arrow prompt',
                            prompt : '<?php echo esc_js( __( 'Add tag...', WPC_CLIENT_TEXT_DOMAIN ) ) ?>',
                            ajax : {
                                url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_get_all_file_tags',
                                dataType : 'json',
                                cacheResults : true
                            }
                        });

                        if( jQuery( '.sb_lightbox').height() > jQuery( '#wpc_edit_file').height() + 70 ) {
                            jQuery( '.sb_lightbox' ).css('min-height', jQuery( '#wpc_edit_file').height() + 70 + 'px').animate({
                                'height': jQuery('#wpc_edit_file').height()+70
                            },500);
                        }
                    }
                });
            });

            // AJAX - update file data
            jQuery('body').on('click', '#update_file', function() {
                file_id     = jQuery( '#edit_file_id' ).val();
                title       = jQuery( '#edit_file_title' ).val();
                description = jQuery( '#edit_file_description' ).val();
                var category = jQuery( '#edit_file_cat_id' ).val();
                var category_name = jQuery( '#edit_file_cat_id' ).find('option[value="' + category + '"]').data('cat_name');

                file_tags   = jQuery( 'input[name="edit_file_tags"]' ).val();

                var external = ( jQuery( '#edit_external_file' ).val() == '1' ) ? true : false;
                var additional_query = '';

                if( external ) {
                    var url         = jQuery( '#edit_file_url' ).val();
                    var protect_url = ( jQuery( '#edit_file_protect_url:checked' ).length == 1 ) ? 1 : 0;

                    additional_query = '&url=' + url + '&protect_url=' + protect_url;
                }

                jQuery( 'body' ).css( 'cursor', 'wait' );

                jQuery.ajax({
                    type: 'POST',
                    url: '<?php echo get_admin_url() ?>admin-ajax.php',
                    data: 'action=wpc_update_file_data&file_id=' + file_id + '&title=' + jQuery.base64Encode( title ) + '&file_tags=' + file_tags +'&description=' + jQuery.base64Encode( description ) +'&category=' + category + additional_query,
                    dataType: "json",
                    success: function( data ){
                        jQuery( 'body' ).css( 'cursor', 'default' );
                        if ( data.id ) {
                            jQuery( '#file_name_block_' + data.id + ' a' ).html( title );
                            jQuery( '#file_name_block_' + data.id + ' a' ).data( 'title', jQuery.base64Encode( title ) );
                            jQuery( '#file_name_block_' + data.id + ' a' ).data( 'description', jQuery.base64Encode( description ) );
                            jQuery( '#file_name_block_' + data.id + ' a' ).attr( 'title', 'Description: ' + jQuery.base64Encode( description ) );

                            jQuery( '#file_name_block_' + data.id ).parents( 'tr' ).find( 'td.categories.column-categories' ).html( category_name );

                            if( data.file_tags )
                                jQuery( 'a[rel="' + data.id + '"]'  ).data( 'file_tags', data.file_tags );

                            if( external ) {
                                jQuery( '#file_name_block_' + data.id + ' span.external_info.url' ).html( data.url );
                                jQuery( '#file_name_block_' + data.id + ' span.external_info.url_protect' ).html( data.protect_url );
                            }
                        }

                        jQuery('.various').shutter_box('close');
                    }
                 });
            });


            <?php if( !empty( $_GET['change_filter'] ) && isset( $_GET[ 'filter_' . $_GET['change_filter'] ] ) ) { ?>
                var filter = '<?php echo $_GET['change_filter']; ?>';
                jQuery( '#change_filter' ).val( filter );
                jQuery( '#select_filter' ).css( 'display', 'none' );
                jQuery( '#select_filter' ).html( '' );
                jQuery( '#load_select_filter' ).addClass( 'wpc_ajax_loading' );
                jQuery.ajax({
                type: 'POST',
                url: '<?php echo get_admin_url() ?>admin-ajax.php',
                data: 'action=wpc_get_options_filter_for_files&filter=' + filter,
                dataType: 'html',
                    success: function( data ){
                        jQuery( '#select_filter' ).html( data );
                        jQuery( '#load_select_filter' ).removeClass( 'wpc_ajax_loading' );
                        jQuery( '#select_filter' ).css( 'display', 'block' );
                        jQuery( '#select_filter' ).val( '<?php echo $_GET[ 'filter_' . $_GET['change_filter'] ]; ?>' );
                    }
                });
             <?php } ?>

            if( typeof plupload != 'undefined' ) {
                plupload.addI18n({
                    "Stop Upload":"<?php echo esc_js( __( 'Stop Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Upload URL might be wrong or doesn't exist.":"<?php echo esc_js( __( 'Upload URL might be wrong or doesn\'t exist.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "tb":"<?php echo esc_js( __( 'tb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Size":"<?php echo esc_js( __( 'Size', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Close":"<?php echo esc_js( __( 'Close', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Init error.":"<?php echo esc_js( __( 'Init error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Add files to the upload queue and click the start button.":"<?php echo esc_js( __( 'Add files to the upload queue and click the start button.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Filename":"<?php echo esc_js( __( 'Filename', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Image format either wrong or not supported.":"<?php echo esc_js( __( 'Image format either wrong or not supported.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Status":"<?php echo esc_js( __( 'Status', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "HTTP Error.":"<?php echo esc_js( __( 'HTTP Error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Start Upload":"<?php echo esc_js( __( 'Start Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "mb":"<?php echo esc_js( __( 'mb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "kb":"<?php echo esc_js( __( 'kb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Duplicate file error.":"<?php echo esc_js( __( 'Duplicate file error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File size error.":"<?php echo esc_js( __( 'File size error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "N/A":"<?php echo esc_js( __( 'N/A', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "gb":"<?php echo esc_js( __( 'gb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Error: Invalid file extension:":"<?php echo esc_js( __( 'Error: Invalid file extension:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Select files":"<?php echo esc_js( __( 'Select files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "%s already present in the queue.":"<?php echo esc_js( __( '%s already present in the queue.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File: %s":"<?php echo esc_js( __( 'File: %s', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "b":"<?php echo esc_js( __( 'b', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Uploaded %d/%d files":"<?php echo esc_js( __( 'Uploaded %d/%d files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Upload element accepts only %d file(s) at a time. Extra files were stripped.":"<?php echo esc_js( __( 'Upload element accepts only %d file(s) at a time. Extra files were stripped.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "%d files queued":"<?php echo esc_js( __( '%d files queued', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File: %s, size: %d, max file size: %d":"<?php echo esc_js( __( 'File: %s, size: %d, max file size: %d', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Drag files here.":"<?php echo esc_js( __( 'Drag files here.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Runtime ran out of available memory.":"<?php echo esc_js( __( 'Runtime ran out of available memory.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File count error.":"<?php echo esc_js( __( 'File count error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File extension error.":"<?php echo esc_js( __( 'File extension error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Error: File too large:":"<?php echo esc_js( __( 'Error: File too large:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Add Files":"<?php echo esc_js( __( 'Add Files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>"
                });
            }

        });
    </script>

</div>